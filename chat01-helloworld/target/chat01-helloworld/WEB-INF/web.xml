<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--
    声明SpringMVC核心配置对象：DispatcherServlet，这是一个Servlet。
    这个Servlet的url-pattern配置的是：*.do
    表示以.do结尾的请求都发送给DispatcherServlet这个Servlet去处理
    -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--contextConfigLocation用来指定SpringMVC配置文件的位置，文件名称不一定要叫springmvc-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--load-on-startup：表示web容器启动的时，当前对象创建的顺序，值越小初始化越早，大于等于0-->
        <load-on-startup>0</load-on-startup>
<!--        添加异步支持-->
        <async-supported>true</async-supported>
    </servlet>
    <!--    <servlet>-->
<!--        <servlet-name>AsyncServlet1</servlet-name>-->
<!--        <servlet-class>cc.goq.chat01.AsyncServlet1</servlet-class>-->
<!--        <async-supported>true</async-supported>-->
<!--    </servlet>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>AsyncServlet1</servlet-name>-->
<!--        <url-pattern>/test/async1</url-pattern>-->
<!--    </servlet-mapping>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>springmvc</servlet-name>-->
<!--        <url-pattern>*.do</url-pattern>-->
<!--    </servlet-mapping>-->
<!--    &lt;!&ndash;所有请求（仅用于测试index.http）&ndash;&gt;-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>springmvc</servlet-name>-->
<!--        <url-pattern>/</url-pattern>-->
<!--    </servlet-mapping>-->
    <!--所有请求（仅用于测试index.http）-->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/chat01/</url-pattern>
    </servlet-mapping>
    <!--添加CharacterEncodingFilter过滤器，这个类中会对request和response设置表名，解决参数乱码问题-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
<!--        添加异步支持-->
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <!--forceRequestEncoding为true，将设置request.setCharacterEncoding(encoding);-->
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <!--forceResponseEncoding为true，将设置response.setCharacterEncoding(encoding);-->
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
<!--        添加异步支持-->
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ASYNC</dispatcher>
    </filter-mapping>
    <!--上面这段配置主要是添加了一个过滤器，这个过滤器处理所有请求，相当于对所有请求执行下面操作，而encoding是我们设置的UTF-8-->
    <!--request.setCharacterEncoding(encoding);-->
    <!--response.setCharacterEncoding(encoding);-->
</web-app>